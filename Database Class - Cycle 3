import sqlite3

class Database:

    def __init__(self,name):
        self.name = name+".db"
        self.database = sqlite3.connect(name+".db")
        print("Database name is {}, stored at {}".format(self.name,self.database))
        #return database

            
    def generateDatabase(self):
        #generate database
        #database = "SRAYGS.db"
        with self.database as db:
            cursor = db.cursor()
            #used if not exists instead of selection statement 
            sql  = """CREATE Table IF NOT EXISTS classroomTable(
                    roomName text PRIMARY KEY,
                    student1 text, student2 text, student3 text, student4 text, student5 text, student6 text, student7 text,
                    student8 text, student9 text, student10 text, student11 text, student12 text, student13 text, student14 text, student15 text,
                    student16 text, student17 text, student18 text, student19 text, student20 text, student21 text, student22 text, student23 text,
                    student24 text, student25 text, student26 text, student27 text, student28 text, student29 text, student30 text, student31 text, student32 text);
                    """
            cursor.execute(sql)

            sql = """ CREATE Table IF NOT EXISTS yearsTable(
                    yearID integer PRIMARY KEY AUTOINCREMENT,
                    academicYear text); """
            cursor.execute(sql)
            
            sql = """ CREATE Table IF NOT EXISTS classesTable(
                    classID integer PRIMARY KEY AUTOINCREMENT,
                    yearID integer NOT NULL,
                    roomName text NOT NULL,
                    className text,
                    FOREIGN KEY (roomName) REFERENCES classroomTable(roomName),
                    FOREIGN KEY (yearID) REFERENCES yearsTable(yearID)); """
            cursor.execute(sql)

            sql = """ CREATE Table IF NOT EXISTS lessonTable(
                   lessonID integer PRIMARY KEY AUTOINCREMENT,
                   roomName text NOT NULL,
                   deviceID integer,
                   date text,
                   time text,
                   currentState text,
                   FOREIGN KEY (roomName) REFERENCES classroomTable(roomName)); """
            cursor.execute(sql)

            #database.commit() #saves the database where database is sqlite3.connect("name.db")
            #database.close()

            #return database

    def setClass(self):
        
        with self.database as db:
            cursor = db.cursor()
            sql  = "SELECT className FROM classesTable"
            cursor.execute(sql)
            print("***Existing Classes***")
            #return existing classes
            result = cursor.fetchall()
            for each in result:
                print(each)
            print("From the list above, type the class you want to choose")
            currentClass = input(">") # need to add in validation for capital letters done two below
            #setting class
            sql = "SELECT classID FROM classesTable WHERE className = \"{}\"".format(currentClass.lower())
            cursor.execute(sql)
            result = cursor.fetchall()
            if result:
                currentClass = result[0][0]
            else:
                print("Your new class will now be added")
                #sql = "INSERT INTO classesTable(yearID, roomName, className) VALUES (0,\"T1\",?)"
                sql = "INSERT INTO classesTable VALUES (null,0,\"T1\",\"{}\")".format(currentClass)
                cursor.execute(sql)

            #print(result)
            #print(currentClass)
            return currentClass
            
def setClass():
    database = generateDatabase()
    
    with sqlite3.connect(database)as db:
        cursor = db.cursor()
        sql  = "SELECT className FROM classesTable"
        cursor.execute(sql)
        print("***Existing Classes***")
        #return existing classes
        result = cursor.fetchall()
        for each in result:
            print(" - " + each[0])
        print("From the list above, type the class you want to choose")
        currentClass = input(">")
        #setting class
        result = getClass(database,currentClass)
        if result:
            print(result[0][0])
        else:
            print("Your new class will now be added")
            #sql = "INSERT INTO classesTable(yearID, roomName, className) VALUES (0,\"T1\",?)"
            sql = "INSERT INTO classesTable VALUES (null,0,\"T1\",\"{}\")".format(currentClass.lower())
            cursor.execute(sql)
            currentClass=getClass(database,currentClass)
        #currentClass = getClass(generateDatabase(),currentClass)
        #print("1",result)
        #print(currentClass)

def getClass(database,currentClass):
    with sqlite3.connect(database)as db:
        cursor = db.cursor()
        sql = "SELECT classID FROM classesTable WHERE className = \"{}\"".format(currentClass.lower())
        cursor.execute(sql)
        result = cursor.fetchall()
        return result




    #INSERT INTO classesTable VALUES (0,0,"T1","8 Beech")  

    #classroomTable "T1",(0,1),(0,2),(0,3),(0,4),(0,5),(0,6),(0,7),(3,7),(3,6),(3,5),(3,4),(3,3),(3,2),(3,1),(3,0),(4,0),(4,1),(4,2),(4,3),(4,4),(4,5),(4,6),(4,7),(7,7),(7,6),(7,5),(7,4),(7,3),(7,2),(7,1),(7,0)
                
    def writeSQL(self):
         with self.database as db:
            cursor = db.cursor()
            sql  = input()
            cursor.execute(sql)
            result = cursor.fetchall()
            for each in result:
                print(each)


